{
  "ConnectionStrings": {
    "_port198DBContext": "Server=tcp:database-2.cvnqbl0ssvof.us-east-2.rds.amazonaws.com,1433;Database=_port198DB;MultipleActiveResultSets=true;User ID=shinsetsu;Password=shinPass123"
  },
  //"Logging": {
  //    "Default": "Information",
  //    "Microsoft": "Warning",
  //    "Microsoft.Hosting.Lifetime": "Information"
  //  }
  //},
  "LiveReload": {
    "LiveReloadEnabled": false, //Check these settings in appsettings.Development.json ---  Keep this turned off. This is production
    //"ClientFileExtensions": ".cshtml,.css,.js,.htm,.html,.ts,.razor,.custom",
    "ClientFileExtensions": ".cshtml,.css",
    "ServerRefreshTimeout": 20, //ServerRefreshTimeout Set this value to get a close approximation how long it takes your server to restart when dotnet watch run reloads your application. This minimizes how frequently the client page monitors for the Web socket to become available again after disconnecting.

    "WebSocketUrl": "/__livereload",
    "WebSocketHost": "ws://localhost:1999",
    "FolderToMonitor": "~/"
  },
  "AllowedHosts": "*"
}


//Stable ground Prior to File Structure Modifications for port197


//"DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=aspnet-_port197-6C6B2575-5E8D-45C9-BE01-94A05A4BC37A;Trusted_Connection=True;MultipleActiveResultSets=true"








//All of these settings are optional.

//LiveReloadEnabled
//If this flag is false live reload has no impact as it simply passes through requests.
//The default is: true.

//I recommend you put: "LiveReloadEnabled": false into appsettings.json and "LiveReloadEnabled": true into appsettings.Development.json so this feature isn't accidentally enabled in Production.

//ClientFileExtensions
//File extensions that the file watcher watches for in the Web project. These are files that can refresh without a server recompile, so don't include source code files here. Source code changes are handled via restarts with dotnet watch run.

//ServerRefreshTimeout
//Set this value to get a close approximation how long it takes your server to restart when dotnet watch run reloads your application. This minimizes how frequently the client page monitors for the Web socket to become available again after disconnecting.

//WebSocketUrl
//The site relative URL to the Web socket handler.

//WebSocketHost
//An explicit WebSocket host URL. Useful if you are running on HTTP2 which doesn't support WebSockets (yet) and you can point at another exposed host URL in your server that serves HTTP1.1. Don't set this unless you have to - the default uses the current host of the request.

//FolderToMonitor
//This is the folder that's monitored. By default it's ~/ which is the Web Project's content root (not the Web root). Other common options are: ~/wwwroot for Web only, ~/../ for the entire solution, or ~/../OtherProject/ for another project (which works well for client side Razor).








//The page will refresh but it will take a while as the server has to restart. Typically 3-5 seconds or so for a simple project, longer for more complex projects obviously.

//You may have to tweak the ServerRefreshTimeout value to account for the time your server takes to restart to get a reliable refresh.